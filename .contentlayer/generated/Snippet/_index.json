[
  {
    "title": "Custom Scrollbar",
    "description": "define your own custom scroll bar",
    "published": true,
    "date": "2022-07-22",
    "stacks": [
      "css",
      "chakra-ui"
    ],
    "body": {
      "raw": "\n## CSS\n\n```css\n::-webkit-scrollbar {\n  width: 0.75rem;\n  height: 0.75rem;\n  background-color: blue;\n}\n\n::-webkit-scrollbar-thumb {\n  border-radius: 20px;\n  background-color: gray;\n}\n\n/** firefox **/\nhtml {\n  scrollbar-width: thin;\n  scrollbar-color: blue;\n}\n```\n\n## References\n\n- MDN\n  - [https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar#browser_compatibility](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar#browser_compatibility)\n  - [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars#browser_compatibility](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars#browser_compatibility)\n- W3Schools: [https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp](https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp)\n- [sznm.dev](http://sznm.dev) - chakra-ui implementation\n  - [https://github.com/sozonome/sznm.dev/commit/f967221e40c7d680eb25ca4944ede4f5def2b628](https://github.com/sozonome/sznm.dev/commit/f967221e40c7d680eb25ca4944ede4f5def2b628)\n  - [https://github.com/sozonome/sznm.dev/commit/76c3ce6895b6de5b0a0d4195378cf68cde269054](https://github.com/sozonome/sznm.dev/commit/76c3ce6895b6de5b0a0d4195378cf68cde269054)\n",
      "html": "<h2>CSS</h2>\n<pre><code class=\"language-css\">::-webkit-scrollbar {\n  width: 0.75rem;\n  height: 0.75rem;\n  background-color: blue;\n}\n\n::-webkit-scrollbar-thumb {\n  border-radius: 20px;\n  background-color: gray;\n}\n\n/** firefox **/\nhtml {\n  scrollbar-width: thin;\n  scrollbar-color: blue;\n}\n</code></pre>\n<h2>References</h2>\n<ul>\n<li>MDN\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar#browser_compatibility\">https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar#browser_compatibility</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars#browser_compatibility\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars#browser_compatibility</a></li>\n</ul>\n</li>\n<li>W3Schools: <a href=\"https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp\">https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp</a></li>\n<li><a href=\"http://sznm.dev\">sznm.dev</a> - chakra-ui implementation\n<ul>\n<li><a href=\"https://github.com/sozonome/sznm.dev/commit/f967221e40c7d680eb25ca4944ede4f5def2b628\">https://github.com/sozonome/sznm.dev/commit/f967221e40c7d680eb25ca4944ede4f5def2b628</a></li>\n<li><a href=\"https://github.com/sozonome/sznm.dev/commit/76c3ce6895b6de5b0a0d4195378cf68cde269054\">https://github.com/sozonome/sznm.dev/commit/76c3ce6895b6de5b0a0d4195378cf68cde269054</a></li>\n</ul>\n</li>\n</ul>"
    },
    "_id": "snippets/custom-scroll-bar.md",
    "_raw": {
      "sourceFilePath": "snippets/custom-scroll-bar.md",
      "sourceFileName": "custom-scroll-bar.md",
      "sourceFileDir": "snippets",
      "contentType": "markdown",
      "flattenedPath": "snippets/custom-scroll-bar"
    },
    "type": "Snippet",
    "id": "custom-scroll-bar"
  },
  {
    "title": "Data Fetching",
    "description": "Fetch data with ease",
    "published": true,
    "date": "2022-10-24",
    "stacks": [
      "http-client",
      "data-fetching"
    ],
    "body": {
      "raw": "\n## Fetcher Utility\n\n> install [axios](https://axios-http.com/)\n\n```bash\npnpm add axios\n```\n\n> add fetcher utility for GET\n\n```ts\nimport axios from \"axios\";\n\ntype FetcherArgs = {\n  url: string;\n  params?: any;\n};\n\nexport const fetcher = <ResType>({ url, params }: FetcherArgs) =>\n  axios.get<ResType>(url, { params }).then((res) => res.data);\n```\n\n## Data Hook with SWR\n\n> install [SWR](https://swr.vercel.app)\n\n```bash\npnpm add swr\n```\n\n> add swr hook utility\n\n```ts\nimport useSWR from \"swr\";\n\ntype UseAppSWRArgs<ResType> = {\n  url: string;\n  params?: any;\n  fallbackData?: ResType;\n  isReady?: boolean;\n};\n\nexport const useAppSWR = <ResType, ErrorType = any>({\n  url,\n  params,\n  fallbackData,\n  isReady = true,\n}: UseAppSWRArgs<ResType>) => {\n  const { data, error, mutate } = useSWR<ResType, ErrorType>(\n    isReady ? { url, params } : null,\n    fetcher,\n    {\n      fallbackData,\n    }\n  );\n\n  return {\n    data,\n    isLoading: !error && !data && isReady,\n    isError: error,\n    mutate,\n  };\n};\n```\n\n> add data hook\n\n```ts\n// useMovieData.ts\nexport const useMovieData = (params?: any) =>\n  useAppSWR({\n    url: \"https://some-api-url.com/api/movies\",\n    params,\n  });\n```\n\n> call the data hook in the component\n\n```tsx\n// SomeComponent.tsx\n\nconst SomeComponent = () => {\n  const { data, isLoading } = useMovieData();\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      {data.results.map((item) => (\n        <p>{item.title}</p>\n      ))}\n    </div>\n  );\n};\n```\n",
      "html": "<h2>Fetcher Utility</h2>\n<blockquote>\n<p>install <a href=\"https://axios-http.com/\">axios</a></p>\n</blockquote>\n<pre><code class=\"language-bash\">pnpm add axios\n</code></pre>\n<blockquote>\n<p>add fetcher utility for GET</p>\n</blockquote>\n<pre><code class=\"language-ts\">import axios from \"axios\";\n\ntype FetcherArgs = {\n  url: string;\n  params?: any;\n};\n\nexport const fetcher = &#x3C;ResType>({ url, params }: FetcherArgs) =>\n  axios.get&#x3C;ResType>(url, { params }).then((res) => res.data);\n</code></pre>\n<h2>Data Hook with SWR</h2>\n<blockquote>\n<p>install <a href=\"https://swr.vercel.app\">SWR</a></p>\n</blockquote>\n<pre><code class=\"language-bash\">pnpm add swr\n</code></pre>\n<blockquote>\n<p>add swr hook utility</p>\n</blockquote>\n<pre><code class=\"language-ts\">import useSWR from \"swr\";\n\ntype UseAppSWRArgs&#x3C;ResType> = {\n  url: string;\n  params?: any;\n  fallbackData?: ResType;\n  isReady?: boolean;\n};\n\nexport const useAppSWR = &#x3C;ResType, ErrorType = any>({\n  url,\n  params,\n  fallbackData,\n  isReady = true,\n}: UseAppSWRArgs&#x3C;ResType>) => {\n  const { data, error, mutate } = useSWR&#x3C;ResType, ErrorType>(\n    isReady ? { url, params } : null,\n    fetcher,\n    {\n      fallbackData,\n    }\n  );\n\n  return {\n    data,\n    isLoading: !error &#x26;&#x26; !data &#x26;&#x26; isReady,\n    isError: error,\n    mutate,\n  };\n};\n</code></pre>\n<blockquote>\n<p>add data hook</p>\n</blockquote>\n<pre><code class=\"language-ts\">// useMovieData.ts\nexport const useMovieData = (params?: any) =>\n  useAppSWR({\n    url: \"https://some-api-url.com/api/movies\",\n    params,\n  });\n</code></pre>\n<blockquote>\n<p>call the data hook in the component</p>\n</blockquote>\n<pre><code class=\"language-tsx\">// SomeComponent.tsx\n\nconst SomeComponent = () => {\n  const { data, isLoading } = useMovieData();\n\n  if (isLoading) {\n    return &#x3C;p>Loading...&#x3C;/p>;\n  }\n\n  return (\n    &#x3C;div>\n      {data.results.map((item) => (\n        &#x3C;p>{item.title}&#x3C;/p>\n      ))}\n    &#x3C;/div>\n  );\n};\n</code></pre>"
    },
    "_id": "snippets/data-fetching.md",
    "_raw": {
      "sourceFilePath": "snippets/data-fetching.md",
      "sourceFileName": "data-fetching.md",
      "sourceFileDir": "snippets",
      "contentType": "markdown",
      "flattenedPath": "snippets/data-fetching"
    },
    "type": "Snippet",
    "id": "data-fetching"
  },
  {
    "title": "Overflow Scroll without Scrollbar",
    "description": "for sleek overflow scroll in mobile viewport",
    "published": true,
    "date": "2022-07-22",
    "stacks": [
      "css",
      "chakra-ui"
    ],
    "body": {
      "raw": "\n## CSS\n\n```css\n.some-component {\n  overflow-x: scroll; /* or overflow-y */\n}\n\n.some-component::-webkit-scrollbar {\n  display: none;\n}\n```\n\n## Chakra-UI\n\n```jsx\n<Flex overflow=\"scroll\" css={{ \"&::-webkit-scrollbar\": { display: \"none\" } }}>\n  ...some children\n</Flex>\n```\n\n## References\n\n- [https://stackoverflow.com/questions/65042380/how-to-add-webkit-scrollbar-pseudo-element-in-chakra-ui-element-react](https://stackoverflow.com/questions/65042380/how-to-add-webkit-scrollbar-pseudo-element-in-chakra-ui-element-react)\n",
      "html": "<h2>CSS</h2>\n<pre><code class=\"language-css\">.some-component {\n  overflow-x: scroll; /* or overflow-y */\n}\n\n.some-component::-webkit-scrollbar {\n  display: none;\n}\n</code></pre>\n<h2>Chakra-UI</h2>\n<pre><code class=\"language-jsx\">&#x3C;Flex overflow=\"scroll\" css={{ \"&#x26;::-webkit-scrollbar\": { display: \"none\" } }}>\n  ...some children\n&#x3C;/Flex>\n</code></pre>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/65042380/how-to-add-webkit-scrollbar-pseudo-element-in-chakra-ui-element-react\">https://stackoverflow.com/questions/65042380/how-to-add-webkit-scrollbar-pseudo-element-in-chakra-ui-element-react</a></li>\n</ul>"
    },
    "_id": "snippets/overflow-scroll-without-scrollbar.md",
    "_raw": {
      "sourceFilePath": "snippets/overflow-scroll-without-scrollbar.md",
      "sourceFileName": "overflow-scroll-without-scrollbar.md",
      "sourceFileDir": "snippets",
      "contentType": "markdown",
      "flattenedPath": "snippets/overflow-scroll-without-scrollbar"
    },
    "type": "Snippet",
    "id": "overflow-scroll-without-scrollbar"
  }
]