{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from 'contentlayer/source-files';\nimport readingTime from 'reading-time';\nimport rehypeRaw from 'rehype-raw';\nimport remarkGfm from 'remark-gfm';\n\nconst ReadTime = defineNestedType(() => ({\n  name: 'ReadTime',\n  fields: {\n    text: { type: 'string', required: true },\n    minutes: { type: 'number', required: true },\n    time: { type: 'number', required: true },\n    words: { type: 'number', required: true },\n  },\n}));\n\nconst Blog = defineDocumentType(() => ({\n  name: 'Blog',\n  filePathPattern: 'posts/*.md',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'string', required: true },\n    cover: { type: 'string', required: true },\n    thumbnail: { type: 'string' },\n    description: { type: 'string' },\n    legacyID: { type: 'string' },\n    published: { type: 'boolean', required: true },\n    tags: { type: 'list', of: { type: 'string' } },\n    readTime: {\n      type: 'nested',\n      of: ReadTime,\n    },\n    cover_image: { type: 'string' },\n  },\n  computedFields: {\n    readTime: {\n      type: 'nested',\n      of: ReadTime,\n      resolve: (post) => readingTime(post.body.raw),\n    },\n    id: {\n      type: 'string',\n      // eslint-disable-next-line no-underscore-dangle\n      resolve: (post) => post._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, ''),\n    },\n  },\n}));\n\nconst Project = defineDocumentType(() => ({\n  name: 'Project',\n  filePathPattern: 'projects/*.md',\n  fields: {\n    title: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    published: { type: 'boolean' },\n    /** will be shown at home */\n    highlight: { type: 'boolean' },\n    /** shown at project list frontpage */\n    featured: { type: 'boolean' },\n    sznmApps: { type: 'boolean' },\n    stacks: { type: 'list', of: { type: 'string' } },\n    date: { type: 'string' },\n    projectLink: { type: 'string' },\n    repoLink: { type: 'string' },\n    appStoreLink: { type: 'string' },\n    playStoreLink: { type: 'string' },\n    icon: { type: 'string' },\n    thumbnail: { type: 'string' },\n    thumbnailDark: { type: 'string' },\n    projectType: { type: 'string' },\n  },\n  computedFields: {\n    id: {\n      type: 'string',\n      // eslint-disable-next-line no-underscore-dangle\n      resolve: (post) => post._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, ''),\n    },\n  },\n}));\n\nconst Snippet = defineDocumentType(() => ({\n  name: 'Snippet',\n  filePathPattern: 'snippets/*.md',\n  fields: {\n    title: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    published: { type: 'boolean' },\n    date: { type: 'string' },\n    stacks: { type: 'list', of: { type: 'string' } },\n  },\n  computedFields: {\n    id: {\n      type: 'string',\n      resolve: (snippet) =>\n        // eslint-disable-next-line no-underscore-dangle\n        snippet._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, ''),\n    },\n  },\n}));\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: 'content',\n  documentTypes: [Blog, Project, Snippet],\n  markdown: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [rehypeRaw],\n  },\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": "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",
  "names": []
}
