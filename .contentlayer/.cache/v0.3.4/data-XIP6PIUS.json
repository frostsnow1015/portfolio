{
  "cacheItemsMap": {
    "posts/2019-recap.md": {
      "document": {
        "title": "2019 Recap",
        "date": "2019-12-31",
        "cover": "https://images.unsplash.com/photo-1549978907-5493b27b19c7?auto=format&q=80",
        "thumbnail": "📘",
        "legacyID": "2019-12-31-2019-recap",
        "published": true,
        "tags": [
          "recap"
        ],
        "readTime": {
          "text": "2 min read",
          "minutes": 1.485,
          "time": 89100,
          "words": 297
        },
        "body": {
          "raw": "\nI spent most of my time in 2019 at college, trying to finish all my university courses by the end of 7th semester so I can focus on Thesis / Final Project at the final semester (8th semester). Planning to graduate in 2020. So...not really much happened in this year, but I learned so much in terms of mobile application and web development. How to build an Android App and got my hands on React framework for the first-time in this year.\n\n## What I learned in 2019\n\n- Java and XML - How to build Native Android apps using Android Studio.\n- REST API - How to fetch data and display it with recycler view in Android app\n- PHP - how to program a website with PHP, MVC.\n- How to setup a website using database with PHP, laragon, and MySQL\n- CodeIgniter - how to use CodeIgniter to build website.\n- How to deploy PHP sites with its database to cPanel hosting.\n- How to setup arcanist in Linux Ubuntu.\n- How to use Git for managing personal and team projects.\n- TypeScript - how to use it, what is the importance of strong typing, and how to compile it into JS\n- React - how to build an app using React with CRA.\n- GraphQL - what is it and how is it used\n- Apollo - how to implement apollo as a client for GraphQL\n- GatsbyJS - how to build a site with Gatsby\n- Ionic - how to build hybrid apps and how does it different from native apps.\n- Angular2+ - forced to learn this framework because learning Ionic Angular and luckily I've learned TypeScript.\n- Zeit - found a Netlify alternative and how to deploy site with it.\n",
          "html": "<p>I spent most of my time in 2019 at college, trying to finish all my university courses by the end of 7th semester so I can focus on Thesis / Final Project at the final semester (8th semester). Planning to graduate in 2020. So...not really much happened in this year, but I learned so much in terms of mobile application and web development. How to build an Android App and got my hands on React framework for the first-time in this year.</p>\n<h2>What I learned in 2019</h2>\n<ul>\n<li>Java and XML - How to build Native Android apps using Android Studio.</li>\n<li>REST API - How to fetch data and display it with recycler view in Android app</li>\n<li>PHP - how to program a website with PHP, MVC.</li>\n<li>How to setup a website using database with PHP, laragon, and MySQL</li>\n<li>CodeIgniter - how to use CodeIgniter to build website.</li>\n<li>How to deploy PHP sites with its database to cPanel hosting.</li>\n<li>How to setup arcanist in Linux Ubuntu.</li>\n<li>How to use Git for managing personal and team projects.</li>\n<li>TypeScript - how to use it, what is the importance of strong typing, and how to compile it into JS</li>\n<li>React - how to build an app using React with CRA.</li>\n<li>GraphQL - what is it and how is it used</li>\n<li>Apollo - how to implement apollo as a client for GraphQL</li>\n<li>GatsbyJS - how to build a site with Gatsby</li>\n<li>Ionic - how to build hybrid apps and how does it different from native apps.</li>\n<li>Angular2+ - forced to learn this framework because learning Ionic Angular and luckily I've learned TypeScript.</li>\n<li>Zeit - found a Netlify alternative and how to deploy site with it.</li>\n</ul>"
        },
        "_id": "posts/2019-recap.md",
        "_raw": {
          "sourceFilePath": "posts/2019-recap.md",
          "sourceFileName": "2019-recap.md",
          "sourceFileDir": "posts",
          "contentType": "markdown",
          "flattenedPath": "posts/2019-recap"
        },
        "type": "Blog",
        "id": "2019-recap"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Blog"
    },
    "posts/2020-recap.md": {
      "document": {
        "title": "2020 Recap",
        "date": "2020-12-31",
        "cover": "https://images.unsplash.com/photo-1600066975936-ecc81000c8b6?auto=format&q=80",
        "thumbnail": "📘",
        "legacyID": "2020-12-31-2020-recap",
        "published": true,
        "tags": [
          "recap"
        ],
        "readTime": {
          "text": "6 min read",
          "minutes": 5.075,
          "time": 304500,
          "words": 1015
        },
        "body": {
          "raw": "\nI think most would say 2020 is a roller coaster year. Even though, 2020 is one of a hella ride and worth for me to be remembered. I've made a quick recap in **[2019](https://sznm.dev/blog/2019-recap)** before. So let's review what I've been up to in 2020.\n\n## What I Learned and Discovered Throughout the Year\n\n### Instagram Filter Creation\n\nI love to edit photos and playing around with colors. Then I learn how to make my own Instagram filter. Turned out facebook provides a tool dedicated for that called Spark AR Studio. You can make literally almost anything starting from a color filter, games, quizzes, anything you can think of when playing around with AR. I just want to edit colors so I just go with color filter. Making a color filter is quite simple, you only have to create a LUT, import it to your Spark AR projects as a layer, export it, and upload it to Spark AR and connect it with your instagram account. Check out some filter I made [here](https://www.instagram.com/agustinusnathaniel/).\n\n### React Hooks and Context\n\nReact hooks been around but I've never learn or use it until I finally get my hands on it when building  an app as part of my undergraduate thesis. I used to stick with Classful Components and use redux (just in desperate moments), but learning hooks and context helps me to switch fully to Functional Components.\n\n### TailwindCSS\n\n2019 was a year where I finally get my hands on React and started to re-learn GatsbyJS (I tried to learn Gatsby before touching React at 2018 and it was a disaster idea). It was a really fun journey. But there's something I've been wanting to try but never accomplished at 2019....TailwindCSS. So, at 2020 I finally get my hands on it and it was really different than other styling frameworks I've ever used before (Bootstrap, Bulma, SemanticUI). I use it to rebuild my first personal site (agustinusnathaniel.com). But around the end of 2020 I re-write it again using Chakra-UI.\n\n### Svelte\n\nI heard svelte often but never tried it until I stumble upon Rich Harris's video when he explain about reactivity. His explanation is really great and quite eye-opening for me who mainly develop using React. So I tried it, made some little projects with it and I like how straightforward it is. I'd recommend using svelte if you are looking for a powerful javascript libraries like react or vue (framework) but with an easier learning curve. I'd love to see Svelte's development over the next years. But not long after that I also got my hands on Next.js.\n\n### Next.js\n\nI learn Next.js and implement it in some of my projects. I used to avoid learning and using Next.js because I haven't understand SSR properly yet. I thought Next.js is only used for SSR projects. Then I found out Next.js support both static site generation and server side rendering since version 9.3 and I got my hands on it for the first time not so long after version 9.4 released. Since then, Next.js has been my go-to react framework for most of my projects.\n\n### Chakra UI\n\nI tried several design system or component libraries this year: Fluent UI, Carbon, Material UI, and Chakra UI. After trying out and play around with those design systems, I found out Chakra UI suits my needs the best. It's easy to be configured, easy to use, and it has color mode styling and management built in. After some time, I made a template with Next.js, Chakra UI, and TypeScript pre-configured and has been my go-to template to initiate most of my recent projects.\n\n## Projects I Worked on in 2020\n\nmost of the projects are just a little side projects for me to try implement some simple ideas or learning something.\n\n### 1. Personal Site Revamp\n\nI re-write my personal site [agustinusnathaniel.com](https://agustinusnathaniel.com) using TailwindCSS and add blog section. At the end of the year I replace the TailwindCSS usage with Chakra UI.\n\n### 2. Le-Cook\n\nAn [app](https://le-cook.sznm.dev) to find food recipe, powered by RecipePuppy API\n\n### 3. Covid-19 Data\n\n[Monitor Covid-19 statistics](https://covid19.sznm.dev), powered by @mathdroid's Covid-19 API, @ariya's Dekontaminasi API, and @Reynaldi531's api-covid19-indonesia v2. First developed using Gatsby, then re-wrote it with Next.js and Chakra UI.\n\n### 4. Advice Generator\n\nA random [advice generator](https://advicegen.sznm.dev) powered by Advice Slip JSON API, written using Svelte.\n\n### 5. Insta Profile\n\nA simple Svelte [app](https://instaprofile.sznm.dev) fetching data from Instagram.\n\n### 6. sznm.dev\n\nI make [another personal site](https://sznm.dev) of myself dedicated for dev content, built using Next.js, composed using Chakra UI.\n\n### 7. KapturaLumina\n\nBasic Photography Learning Mobile App with Gamification. Built using Ionic, React, and Firebase. Available as [PWA](https://kapturalumina.sznm.dev) and [android](https://play.google.com/store/apps/details?id=dev.sznm.kapturalumina) app. I built it as part of my undergraduate thesis.\n\n### 8. nextarter-chakra\n\nA [template](https://nextarter-chakra.sznm.dev/) I made to initialize Next.js projects with TypeScript and Chakra UI setup. Most of my following projects are initalized / generated using this template.\n\n### 9. Add to Calendar Generator\n\nA web [app](https://addtocal.sznm.dev) to generate Add to Calendar link (Google Calendar).\n\n### 10. InstaDLD\n\nInstagram post media [downloader](https://instadld.sznm.dev) with multipost download supported.\n\n### 11. Public APIs\n\nAn [app](https://publicapis.sznm.dev) to find public API for you next projects. Didn't thought it could be the [product of the day](https://www.producthunt.com/posts/public-apis-3) in Product Hunt at 26 Dec 2020. Powered by api.publicapis.org.\n\n## Some other stuffs worth to mention\n\n- I graduated from college (finally) 😊😊. Really grateful for everyone who supported me until now, especially my family and friends.\n- I started my career as Software Engineer right after I finished my thesis.\n\nAll in all, I'm glad I can get through 2020 pretty well enough. I never imagined I'd graduate in time, especially when the pandemic situation started to happen and my thesis proposals got rejected several times. Hoping to grow more in 2021 and crafting greater stuffs. Thank you for reading and I hope you are doing well 😄.\n\nIf you're interested in another version of my review of my journey in 2020, I also published it at [twitter](https://twitter.com/sozonome/status/1345261139358142467) (focused around the projects I made throughout the year).\n\nMy previous recap: **[2019](https://sznm.dev/blog/2019-recap)**.\n",
          "html": "<p>I think most would say 2020 is a roller coaster year. Even though, 2020 is one of a hella ride and worth for me to be remembered. I've made a quick recap in <strong><a href=\"https://sznm.dev/blog/2019-recap\">2019</a></strong> before. So let's review what I've been up to in 2020.</p>\n<h2>What I Learned and Discovered Throughout the Year</h2>\n<h3>Instagram Filter Creation</h3>\n<p>I love to edit photos and playing around with colors. Then I learn how to make my own Instagram filter. Turned out facebook provides a tool dedicated for that called Spark AR Studio. You can make literally almost anything starting from a color filter, games, quizzes, anything you can think of when playing around with AR. I just want to edit colors so I just go with color filter. Making a color filter is quite simple, you only have to create a LUT, import it to your Spark AR projects as a layer, export it, and upload it to Spark AR and connect it with your instagram account. Check out some filter I made <a href=\"https://www.instagram.com/agustinusnathaniel/\">here</a>.</p>\n<h3>React Hooks and Context</h3>\n<p>React hooks been around but I've never learn or use it until I finally get my hands on it when building  an app as part of my undergraduate thesis. I used to stick with Classful Components and use redux (just in desperate moments), but learning hooks and context helps me to switch fully to Functional Components.</p>\n<h3>TailwindCSS</h3>\n<p>2019 was a year where I finally get my hands on React and started to re-learn GatsbyJS (I tried to learn Gatsby before touching React at 2018 and it was a disaster idea). It was a really fun journey. But there's something I've been wanting to try but never accomplished at 2019....TailwindCSS. So, at 2020 I finally get my hands on it and it was really different than other styling frameworks I've ever used before (Bootstrap, Bulma, SemanticUI). I use it to rebuild my first personal site (agustinusnathaniel.com). But around the end of 2020 I re-write it again using Chakra-UI.</p>\n<h3>Svelte</h3>\n<p>I heard svelte often but never tried it until I stumble upon Rich Harris's video when he explain about reactivity. His explanation is really great and quite eye-opening for me who mainly develop using React. So I tried it, made some little projects with it and I like how straightforward it is. I'd recommend using svelte if you are looking for a powerful javascript libraries like react or vue (framework) but with an easier learning curve. I'd love to see Svelte's development over the next years. But not long after that I also got my hands on Next.js.</p>\n<h3>Next.js</h3>\n<p>I learn Next.js and implement it in some of my projects. I used to avoid learning and using Next.js because I haven't understand SSR properly yet. I thought Next.js is only used for SSR projects. Then I found out Next.js support both static site generation and server side rendering since version 9.3 and I got my hands on it for the first time not so long after version 9.4 released. Since then, Next.js has been my go-to react framework for most of my projects.</p>\n<h3>Chakra UI</h3>\n<p>I tried several design system or component libraries this year: Fluent UI, Carbon, Material UI, and Chakra UI. After trying out and play around with those design systems, I found out Chakra UI suits my needs the best. It's easy to be configured, easy to use, and it has color mode styling and management built in. After some time, I made a template with Next.js, Chakra UI, and TypeScript pre-configured and has been my go-to template to initiate most of my recent projects.</p>\n<h2>Projects I Worked on in 2020</h2>\n<p>most of the projects are just a little side projects for me to try implement some simple ideas or learning something.</p>\n<h3>1. Personal Site Revamp</h3>\n<p>I re-write my personal site <a href=\"https://agustinusnathaniel.com\">agustinusnathaniel.com</a> using TailwindCSS and add blog section. At the end of the year I replace the TailwindCSS usage with Chakra UI.</p>\n<h3>2. Le-Cook</h3>\n<p>An <a href=\"https://le-cook.sznm.dev\">app</a> to find food recipe, powered by RecipePuppy API</p>\n<h3>3. Covid-19 Data</h3>\n<p><a href=\"https://covid19.sznm.dev\">Monitor Covid-19 statistics</a>, powered by @mathdroid's Covid-19 API, @ariya's Dekontaminasi API, and @Reynaldi531's api-covid19-indonesia v2. First developed using Gatsby, then re-wrote it with Next.js and Chakra UI.</p>\n<h3>4. Advice Generator</h3>\n<p>A random <a href=\"https://advicegen.sznm.dev\">advice generator</a> powered by Advice Slip JSON API, written using Svelte.</p>\n<h3>5. Insta Profile</h3>\n<p>A simple Svelte <a href=\"https://instaprofile.sznm.dev\">app</a> fetching data from Instagram.</p>\n<h3>6. sznm.dev</h3>\n<p>I make <a href=\"https://sznm.dev\">another personal site</a> of myself dedicated for dev content, built using Next.js, composed using Chakra UI.</p>\n<h3>7. KapturaLumina</h3>\n<p>Basic Photography Learning Mobile App with Gamification. Built using Ionic, React, and Firebase. Available as <a href=\"https://kapturalumina.sznm.dev\">PWA</a> and <a href=\"https://play.google.com/store/apps/details?id=dev.sznm.kapturalumina\">android</a> app. I built it as part of my undergraduate thesis.</p>\n<h3>8. nextarter-chakra</h3>\n<p>A <a href=\"https://nextarter-chakra.sznm.dev/\">template</a> I made to initialize Next.js projects with TypeScript and Chakra UI setup. Most of my following projects are initalized / generated using this template.</p>\n<h3>9. Add to Calendar Generator</h3>\n<p>A web <a href=\"https://addtocal.sznm.dev\">app</a> to generate Add to Calendar link (Google Calendar).</p>\n<h3>10. InstaDLD</h3>\n<p>Instagram post media <a href=\"https://instadld.sznm.dev\">downloader</a> with multipost download supported.</p>\n<h3>11. Public APIs</h3>\n<p>An <a href=\"https://publicapis.sznm.dev\">app</a> to find public API for you next projects. Didn't thought it could be the <a href=\"https://www.producthunt.com/posts/public-apis-3\">product of the day</a> in Product Hunt at 26 Dec 2020. Powered by api.publicapis.org.</p>\n<h2>Some other stuffs worth to mention</h2>\n<ul>\n<li>I graduated from college (finally) 😊😊. Really grateful for everyone who supported me until now, especially my family and friends.</li>\n<li>I started my career as Software Engineer right after I finished my thesis.</li>\n</ul>\n<p>All in all, I'm glad I can get through 2020 pretty well enough. I never imagined I'd graduate in time, especially when the pandemic situation started to happen and my thesis proposals got rejected several times. Hoping to grow more in 2021 and crafting greater stuffs. Thank you for reading and I hope you are doing well 😄.</p>\n<p>If you're interested in another version of my review of my journey in 2020, I also published it at <a href=\"https://twitter.com/sozonome/status/1345261139358142467\">twitter</a> (focused around the projects I made throughout the year).</p>\n<p>My previous recap: <strong><a href=\"https://sznm.dev/blog/2019-recap\">2019</a></strong>.</p>"
        },
        "_id": "posts/2020-recap.md",
        "_raw": {
          "sourceFilePath": "posts/2020-recap.md",
          "sourceFileName": "2020-recap.md",
          "sourceFileDir": "posts",
          "contentType": "markdown",
          "flattenedPath": "posts/2020-recap"
        },
        "type": "Blog",
        "id": "2020-recap"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Blog"
    },
    "posts/how-to-secure-firebase-project.md": {
      "document": {
        "title": "How to Secure Your Firebase Project",
        "date": "2021-05-13",
        "cover": "https://images.unsplash.com/photo-1582139329536-e7284fece509?auto=format&q=80",
        "thumbnail": "🔒",
        "legacyID": "2021-05-13-how-to-secure-firebase-project",
        "published": true,
        "tags": [
          "security",
          "firebase"
        ],
        "readTime": {
          "text": "3 min read",
          "minutes": 2.46,
          "time": 147600,
          "words": 492
        },
        "body": {
          "raw": "\n> disclaimer: This is not by any means to be the best practice guide of using firebase in every project. Every project has its own needs and specifications. This guide may not be suitable with your needs.\n\nDo you develop apps using Firebase? If so, we should know that our firebase configs will be exposed to the client (especially for web clients). Then what's the deal? Many possibilities can be happened and prevented. So many articles already covers on how to secure our firebase project by using security rules, authentication check, etc. I usually define my security rules using a package named [`@jahed/firebase-rules`](https://www.npmjs.com/package/@jahed/firebase-rules). But how about preventing someone from making their own client and use our exposed firebase configs to do some shady stuffs towards our realtime database?\n\n## Apply Restrictions to the API Key\n\nEvery firebase project is a GCP (Google Cloud Platform) project, so we can go to Google Cloud console to configure further our firebase project. We can restrict the API key even though it is exposed. Just follow these steps:\n\n1. Go to [https://console.cloud.google.com/apis](https://console.cloud.google.com/apis),\n   ![Credentials Tab](https://sznm.dev/images/2021-05-13-how-to-secure-firebase-project/GCP-01.png)\n2. Select the desired firebase project,\n3. Go to `Credentials` menu,\n4. Look for `API Keys` section, select the API key which has `...(auto created by Firebase)`,\n   ![API Key Restrictions Tab](https://sznm.dev/images/2021-05-13-how-to-secure-firebase-project/GCP-02.png)\n5. You will be directed to a page called `Restrict and rename API key`, go to `Application restrictions` section, select `HTTP referrers (web sites)`, add your production web client domain in `Website restrictions` section. Don't add `localhost` if you intend to use the firebase project for production.\n6. Hit the `save` button to apply changes.\n\nVoila! Your API key already restricted!\n\n## Use Different Firebase Project for Local Development\n\nNow that we already apply restrictions to our API key, how about our local development (`localhost`)? Well, we can just create a new firebase project which will be used for our local development.\n\n### Special Case: Develop Hybrid Mobile App Using Ionic\n\nWhen developing hybrid app using ionic, chances are we gonna use the same firebase configs for Web and Android / iOS build (firebase web configs). Even though we made several firebase web configs, the API key will remain the same. If we apply restrictions to the API key to be only accessible for certain domain, then the API key won't be usable for the mobile build. Fortunately, there is a workaround for this. We can just create a new API key which don't have any domain restrictions just for our mobile build (the API key can't be easily accessed by the user anyway for Android / iOS build). So, we can use the same firebase configs for our web and mobile builds, but having different API key. Just go to https://console.cloud.google.com/apis/credentials (make sure you already select the corresponding project first), then just create a new API key which will be used for your mobile apps.\n\n### References\n\n- Defining Firebase security rules\n  - [https://www.npmjs.com/package/@jahed/firebase-rules](https://www.npmjs.com/package/@jahed/firebase-rules)\n- Restrict API key\n  - [https://medium.com/@devesu/how-to-secure-your-firebase-project-even-when-your-api-key-is-publicly-available-a462a2a58843](https://medium.com/@devesu/how-to-secure-your-firebase-project-even-when-your-api-key-is-publicly-available-a462a2a58843)\n",
          "html": "<blockquote>\n<p>disclaimer: This is not by any means to be the best practice guide of using firebase in every project. Every project has its own needs and specifications. This guide may not be suitable with your needs.</p>\n</blockquote>\n<p>Do you develop apps using Firebase? If so, we should know that our firebase configs will be exposed to the client (especially for web clients). Then what's the deal? Many possibilities can be happened and prevented. So many articles already covers on how to secure our firebase project by using security rules, authentication check, etc. I usually define my security rules using a package named <a href=\"https://www.npmjs.com/package/@jahed/firebase-rules\"><code>@jahed/firebase-rules</code></a>. But how about preventing someone from making their own client and use our exposed firebase configs to do some shady stuffs towards our realtime database?</p>\n<h2>Apply Restrictions to the API Key</h2>\n<p>Every firebase project is a GCP (Google Cloud Platform) project, so we can go to Google Cloud console to configure further our firebase project. We can restrict the API key even though it is exposed. Just follow these steps:</p>\n<ol>\n<li>Go to <a href=\"https://console.cloud.google.com/apis\">https://console.cloud.google.com/apis</a>,\n<img src=\"https://sznm.dev/images/2021-05-13-how-to-secure-firebase-project/GCP-01.png\" alt=\"Credentials Tab\"></li>\n<li>Select the desired firebase project,</li>\n<li>Go to <code>Credentials</code> menu,</li>\n<li>Look for <code>API Keys</code> section, select the API key which has <code>...(auto created by Firebase)</code>,\n<img src=\"https://sznm.dev/images/2021-05-13-how-to-secure-firebase-project/GCP-02.png\" alt=\"API Key Restrictions Tab\"></li>\n<li>You will be directed to a page called <code>Restrict and rename API key</code>, go to <code>Application restrictions</code> section, select <code>HTTP referrers (web sites)</code>, add your production web client domain in <code>Website restrictions</code> section. Don't add <code>localhost</code> if you intend to use the firebase project for production.</li>\n<li>Hit the <code>save</code> button to apply changes.</li>\n</ol>\n<p>Voila! Your API key already restricted!</p>\n<h2>Use Different Firebase Project for Local Development</h2>\n<p>Now that we already apply restrictions to our API key, how about our local development (<code>localhost</code>)? Well, we can just create a new firebase project which will be used for our local development.</p>\n<h3>Special Case: Develop Hybrid Mobile App Using Ionic</h3>\n<p>When developing hybrid app using ionic, chances are we gonna use the same firebase configs for Web and Android / iOS build (firebase web configs). Even though we made several firebase web configs, the API key will remain the same. If we apply restrictions to the API key to be only accessible for certain domain, then the API key won't be usable for the mobile build. Fortunately, there is a workaround for this. We can just create a new API key which don't have any domain restrictions just for our mobile build (the API key can't be easily accessed by the user anyway for Android / iOS build). So, we can use the same firebase configs for our web and mobile builds, but having different API key. Just go to <a href=\"https://console.cloud.google.com/apis/credentials\">https://console.cloud.google.com/apis/credentials</a> (make sure you already select the corresponding project first), then just create a new API key which will be used for your mobile apps.</p>\n<h3>References</h3>\n<ul>\n<li>Defining Firebase security rules\n<ul>\n<li><a href=\"https://www.npmjs.com/package/@jahed/firebase-rules\">https://www.npmjs.com/package/@jahed/firebase-rules</a></li>\n</ul>\n</li>\n<li>Restrict API key\n<ul>\n<li><a href=\"https://medium.com/@devesu/how-to-secure-your-firebase-project-even-when-your-api-key-is-publicly-available-a462a2a58843\">https://medium.com/@devesu/how-to-secure-your-firebase-project-even-when-your-api-key-is-publicly-available-a462a2a58843</a></li>\n</ul>\n</li>\n</ul>"
        },
        "_id": "posts/how-to-secure-firebase-project.md",
        "_raw": {
          "sourceFilePath": "posts/how-to-secure-firebase-project.md",
          "sourceFileName": "how-to-secure-firebase-project.md",
          "sourceFileDir": "posts",
          "contentType": "markdown",
          "flattenedPath": "posts/how-to-secure-firebase-project"
        },
        "type": "Blog",
        "id": "how-to-secure-firebase-project"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Blog"
    },
    "posts/monitor-and-measure-site-performance-with-speedlify.md": {
      "document": {
        "title": "Monitor and Measure Site Performance from Time to Time and Automatically using Speedlify",
        "date": "2020-11-07",
        "cover": "https://images.unsplash.com/photo-1567916190725-372c28edc554?auto=format&q=80",
        "thumbnail": "🏎️",
        "legacyID": "2020-11-07-monitor-and-measure-site-performance-with-speedlify",
        "published": true,
        "tags": [
          "performance",
          "monitoring"
        ],
        "readTime": {
          "text": "7 min read",
          "minutes": 6.485,
          "time": 389100,
          "words": 1297
        },
        "body": {
          "raw": "\n## TL;DR\n\nWant to measure and monitor your site performance from time to time and automatically? Deploy [Speedlify](https://speedlify.dev) through [Netlify](https://www.netlify.com/) and use [Github Actions](https://github.com/features/actions) (cron schedule) or Zapier to automatically trigger build every desired time.\n\nYou can directly visit [this page](https://github.com/zachleat/speedlify/#deploy-to-netlify) if you know what to do next. But if you need some guidance, this article will help you step by step.\n\n### What will be covered in this article?\n\n- How to configure Speedlify\n- How to deploy Speedlify\n- Using Netlify build hooks and Github Actions to automatically trigger build Speedlify page every desired time.\n\n### This article won't cover...\n\nSEO or visitor related metrics like Google Analytics. The site performance mentioned in this article is [Lighthouse](https://developers.google.com/web/tools/lighthouse) based performance measurement.\n\n---\n\n## Measuring Site Performance\n\nNowadays there are so many ways to measure site performance beside running lighthouse in your local machine (Chrome Dev Tools). Even recently [Vercel](https://vercel.com), PaaS for frontend deployment released a feature called [Analytics](https://vercel.com/docs/analytics/overview.amp). This feature can show your [Next.js](https://nextjs.org/analytics) or [Gatsby](https://vercel.com/blog/gatsby-analytics) site performance automatically from time-to-time without having to configure anything (_almost zero-config_). But this feature is limited to be applicable for one project if your vercel account is a free version.\n\nWhat if we have more than one project / site to be measured from time-to-time without spending extra cost? Well, this is where [Speedlify](https://speedlify.dev) comes in, a template for site performance monitor created by [Zach Leatherman](https://github.com/zachleat). Speedlify built using a static site generator framework called [11ty(eleventy)](https://www.11ty.dev/).\n\nI've tried to deploy my own speedlify [here](https://audit.sznm.dev).\n\n_fun fact: I found Speedlify when I was just randomly exploring 11ty docs page (not really important, just intermezzo 😄)_\n\nWell, let's get our hands dirty!\n\n## How?\n\n### What is needed?\n\n- a Github account\n- a Netlify account\n\n### This Guide was Written with Assumtions that You:\n\n- know how to use basic Git commands\n- familiar with Netlify\n- familiar with Node.js environment (installed node and npm)\n\nI suggest you to visit [Speedlify](https://speedlify.dev) to get some glimpse on what we will be using. There's a link to the source code repository on that page which shows you how to deploy your own Speedlify page. However, if you are having some difficulties, you can folow these steps:\n\n### #1: Clone Speedlify Repo\n\nImport speedlify repository to your github account ([https://github.com/new/import](https://github.com/new/import)),\ninput this URL: `https://github.com/zachleat/speedlify/`.\n\nAfter the import process is done, clone your speedlify repo into your local machine or just run these command below in your local folder:\n\n```git\ngit clone https://github.com/[YOUR_GITHUB_USERNAME]/speedlify/\n```\n\n```\ncd speedlify\n```\n\nThen, run `npm install` or `npm i`.\n\n### #2: Configure URLs\n\nOpen `_data/sites` folder. Every file you create here will represent a category. You can defined more than one URL for every category.\nJust delete all default files in `_data/sites`. Create a file `[CATEGORY_NAME].js`. (change [CATEGORY_NAME] with your desired category name). You can create more than one category, but you must know some limitations here: [https://github.com/zachleat/speedlify/#known-limitations](https://github.com/zachleat/speedlify/#known-limitations)\n\n```js\n// _data/sites/[CATEGORY_NAME].js\nmodule.exports = {\n  name: \"Category Name\", // optional, falls back to object key\n  description: \"Category Description\",\n  options: {\n    frequency: 60 * 23, // 23 hours\n\n    // Use \"run\" if the sites don’t share assets on the same origin\n    //           and we can reset chrome with each run instead of\n    //           each site in every run (it’s faster)\n    // Use \"site\" if sites are all on the same origin and share assets.\n    freshChrome: \"run\",\n  },\n  urls: [\n    \"https://[YOUR_SITE_URL]/\",\n    \"https://[YOUR_SITE_URL]/\",\n    // etc\n  ],\n};\n```\n\n#### explanations\n\n- `options`\n  - `frequency`: to set minimum time needed before next measurement. If we set `60*23` (1380 minutes or 23 hours) it means we will be measuring our site performance once every 23 hours. This value will be used to avoid measurement more than once before the minimum time was passed which will affect the build time. If we set the frequency to 23 hours and trigger build every 6 hours, the measurement for this category will be skipped if the last measurement haven't passed 23 hours.\n\n### #3: Test run in local\n\nRun `npm run start`. If the categories you input are shown, you can continue to the next step. You won't see any measurements. Measurements will be done at the build time when we deploy your Speedlify to Netlify.\nCommit your changes and run `git push` to apply changes to your github repository.\n\n### #4: Deploy configured Speedlify through Netlify\n\nOpen your Netlify dashboard ([https://app.netlify.com/](https://app.netlify.com/)), click \"New site from Git\". Point it to your Speedlify repository.\n\n![Click New site from Git](https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/add-site-netlify.png)\n\nConfirm the build configurations until \"Deploy Site\" button is shown and click that button. Netlify build will do the build and deployment process. If the build and deployment process are successful, you can preview your deployment.\n\nThe measurement page will look like this:\n\n![Measurement page](https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/preview.png)\n\n### #5: Configure Github Actions to Automatically Trigger Build Every Desired Time\n\nTo do measurement from time-to-time, we will utilize Netlify build hooks and Github Actions. Why? Because measurement are only done on build time. It will be a hassle to trigger the build process manually. You don't have to use Github Actions if you prefer to use Zapier or similar services which support cron schedule. The same process can be achieved using Zapier with Schedule by Zapier and Webhooks by Zapier. However for the time being Webhooks by Zapier can only be enabled if you are a Zapier premium user. Therefore, in this guide I will use Github Actions as an alternative which are more friendly to our pocket.\n\nWe will need build hook link (webhooks) to trigger build in Netlify. To get that link, open your speedlify project in your Netlify dashboard, then open \"Site settings\". Open \"Build & Deploy\".\n\n![Open Build and Deploy settings](https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/build-and-deploy-setting.png)\n\nThen point to \"Build hooks\", click \"Add build hook\".\n![Add Build Hook](https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/add-build-hook.png)\n\nWe will get the build hooks URL, copy that link.\n\n![Alt Text](https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/build-hook-link.png)\n\nNow we can configure Github Actions to automatically trigger build to Netlify. Go back to your speedlify local folder, add a file named `.github/workflows/main.yml` and paste the copied build hooks URL into this file:\n\n```yml\n# .github/workflows/main.yml\n\n# edit according to your needs\nname: Trigger Netlify Build daily on Weekday\non:\n  schedule:\n    # if you want to define your own build trigger schedule, just change the cron schedule value below\n    # use https://crontab.guru/ if you are having some difficulties on how to define the cron values\n    - cron: \"0 22 * * MON-FRI\"\n    # every day on weekdays 22:00.\njobs:\n  build:\n    name: Netlify build\n    runs-on: ubuntu-latest\n    steps:\n      - name: Curl request\n        run: curl -X POST -d {} YOUR_BUILD_HOOK_URL\n```\n\nCommit your changes and run `git push`. If it's configured correctly, it will be shown in \"Actions\" tab at your github repository.\n\nNow you have a dedicated page to monitor your site performance from time-to-time and automatically updated.\n\n## Limitations\n\nIt's important to note that the more URL you add to your speedlify configurations, the build time needed will be increased. The free version of Netlify have a maximum 15 minutes build time for every build process and 300 minutes build time quota for every month.\n\nI work around it by limiting my measurement to be done maximum once every 23 hours and limiting the total URLs from all category to be around 5 until 10, and automatically trigger the build every day on weekdays only at 10PM. With those configurations, every build would spend around 4 until 7 minutes (<15 minutes), so I won't hit the monthly build time quota limit (4.5 x 5 x 7 ~= 160 minutes -> <300 minutes).\n\n## Thank You!\n\nFor reading this article. I hope you found this useful.\n\n## References\n\n- [https://www.speedlify.dev/](https://www.speedlify.dev/)\n- [https://github.com/zachleat/speedlify/#deploy-to-netlify](https://github.com/zachleat/speedlify/#deploy-to-netlify)\n- [https://github.com/zachleat/speedlify/#known-limitations](https://github.com/zachleat/speedlify/#known-limitations)\n- [https://www.zachleat.com/web/speedlify/](https://www.zachleat.com/web/speedlify/)\n\n## Some Alternatives\n\n(some exhaustive list of other tools to measure your website performance)\n\n- [https://web.dev/measure/](https://web.dev/measure/)\n- [https://www.lightest.app/](https://web.dev/measure/)\n",
          "html": "<h2>TL;DR</h2>\n<p>Want to measure and monitor your site performance from time to time and automatically? Deploy <a href=\"https://speedlify.dev\">Speedlify</a> through <a href=\"https://www.netlify.com/\">Netlify</a> and use <a href=\"https://github.com/features/actions\">Github Actions</a> (cron schedule) or Zapier to automatically trigger build every desired time.</p>\n<p>You can directly visit <a href=\"https://github.com/zachleat/speedlify/#deploy-to-netlify\">this page</a> if you know what to do next. But if you need some guidance, this article will help you step by step.</p>\n<h3>What will be covered in this article?</h3>\n<ul>\n<li>How to configure Speedlify</li>\n<li>How to deploy Speedlify</li>\n<li>Using Netlify build hooks and Github Actions to automatically trigger build Speedlify page every desired time.</li>\n</ul>\n<h3>This article won't cover...</h3>\n<p>SEO or visitor related metrics like Google Analytics. The site performance mentioned in this article is <a href=\"https://developers.google.com/web/tools/lighthouse\">Lighthouse</a> based performance measurement.</p>\n<hr>\n<h2>Measuring Site Performance</h2>\n<p>Nowadays there are so many ways to measure site performance beside running lighthouse in your local machine (Chrome Dev Tools). Even recently <a href=\"https://vercel.com\">Vercel</a>, PaaS for frontend deployment released a feature called <a href=\"https://vercel.com/docs/analytics/overview.amp\">Analytics</a>. This feature can show your <a href=\"https://nextjs.org/analytics\">Next.js</a> or <a href=\"https://vercel.com/blog/gatsby-analytics\">Gatsby</a> site performance automatically from time-to-time without having to configure anything (<em>almost zero-config</em>). But this feature is limited to be applicable for one project if your vercel account is a free version.</p>\n<p>What if we have more than one project / site to be measured from time-to-time without spending extra cost? Well, this is where <a href=\"https://speedlify.dev\">Speedlify</a> comes in, a template for site performance monitor created by <a href=\"https://github.com/zachleat\">Zach Leatherman</a>. Speedlify built using a static site generator framework called <a href=\"https://www.11ty.dev/\">11ty(eleventy)</a>.</p>\n<p>I've tried to deploy my own speedlify <a href=\"https://audit.sznm.dev\">here</a>.</p>\n<p><em>fun fact: I found Speedlify when I was just randomly exploring 11ty docs page (not really important, just intermezzo 😄)</em></p>\n<p>Well, let's get our hands dirty!</p>\n<h2>How?</h2>\n<h3>What is needed?</h3>\n<ul>\n<li>a Github account</li>\n<li>a Netlify account</li>\n</ul>\n<h3>This Guide was Written with Assumtions that You:</h3>\n<ul>\n<li>know how to use basic Git commands</li>\n<li>familiar with Netlify</li>\n<li>familiar with Node.js environment (installed node and npm)</li>\n</ul>\n<p>I suggest you to visit <a href=\"https://speedlify.dev\">Speedlify</a> to get some glimpse on what we will be using. There's a link to the source code repository on that page which shows you how to deploy your own Speedlify page. However, if you are having some difficulties, you can folow these steps:</p>\n<h3>#1: Clone Speedlify Repo</h3>\n<p>Import speedlify repository to your github account (<a href=\"https://github.com/new/import\">https://github.com/new/import</a>),\ninput this URL: <code>https://github.com/zachleat/speedlify/</code>.</p>\n<p>After the import process is done, clone your speedlify repo into your local machine or just run these command below in your local folder:</p>\n<pre><code class=\"language-git\">git clone https://github.com/[YOUR_GITHUB_USERNAME]/speedlify/\n</code></pre>\n<pre><code>cd speedlify\n</code></pre>\n<p>Then, run <code>npm install</code> or <code>npm i</code>.</p>\n<h3>#2: Configure URLs</h3>\n<p>Open <code>_data/sites</code> folder. Every file you create here will represent a category. You can defined more than one URL for every category.\nJust delete all default files in <code>_data/sites</code>. Create a file <code>[CATEGORY_NAME].js</code>. (change [CATEGORY_NAME] with your desired category name). You can create more than one category, but you must know some limitations here: <a href=\"https://github.com/zachleat/speedlify/#known-limitations\">https://github.com/zachleat/speedlify/#known-limitations</a></p>\n<pre><code class=\"language-js\">// _data/sites/[CATEGORY_NAME].js\nmodule.exports = {\n  name: \"Category Name\", // optional, falls back to object key\n  description: \"Category Description\",\n  options: {\n    frequency: 60 * 23, // 23 hours\n\n    // Use \"run\" if the sites don’t share assets on the same origin\n    //           and we can reset chrome with each run instead of\n    //           each site in every run (it’s faster)\n    // Use \"site\" if sites are all on the same origin and share assets.\n    freshChrome: \"run\",\n  },\n  urls: [\n    \"https://[YOUR_SITE_URL]/\",\n    \"https://[YOUR_SITE_URL]/\",\n    // etc\n  ],\n};\n</code></pre>\n<h4>explanations</h4>\n<ul>\n<li><code>options</code>\n<ul>\n<li><code>frequency</code>: to set minimum time needed before next measurement. If we set <code>60*23</code> (1380 minutes or 23 hours) it means we will be measuring our site performance once every 23 hours. This value will be used to avoid measurement more than once before the minimum time was passed which will affect the build time. If we set the frequency to 23 hours and trigger build every 6 hours, the measurement for this category will be skipped if the last measurement haven't passed 23 hours.</li>\n</ul>\n</li>\n</ul>\n<h3>#3: Test run in local</h3>\n<p>Run <code>npm run start</code>. If the categories you input are shown, you can continue to the next step. You won't see any measurements. Measurements will be done at the build time when we deploy your Speedlify to Netlify.\nCommit your changes and run <code>git push</code> to apply changes to your github repository.</p>\n<h3>#4: Deploy configured Speedlify through Netlify</h3>\n<p>Open your Netlify dashboard (<a href=\"https://app.netlify.com/\">https://app.netlify.com/</a>), click \"New site from Git\". Point it to your Speedlify repository.</p>\n<p><img src=\"https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/add-site-netlify.png\" alt=\"Click New site from Git\"></p>\n<p>Confirm the build configurations until \"Deploy Site\" button is shown and click that button. Netlify build will do the build and deployment process. If the build and deployment process are successful, you can preview your deployment.</p>\n<p>The measurement page will look like this:</p>\n<p><img src=\"https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/preview.png\" alt=\"Measurement page\"></p>\n<h3>#5: Configure Github Actions to Automatically Trigger Build Every Desired Time</h3>\n<p>To do measurement from time-to-time, we will utilize Netlify build hooks and Github Actions. Why? Because measurement are only done on build time. It will be a hassle to trigger the build process manually. You don't have to use Github Actions if you prefer to use Zapier or similar services which support cron schedule. The same process can be achieved using Zapier with Schedule by Zapier and Webhooks by Zapier. However for the time being Webhooks by Zapier can only be enabled if you are a Zapier premium user. Therefore, in this guide I will use Github Actions as an alternative which are more friendly to our pocket.</p>\n<p>We will need build hook link (webhooks) to trigger build in Netlify. To get that link, open your speedlify project in your Netlify dashboard, then open \"Site settings\". Open \"Build &#x26; Deploy\".</p>\n<p><img src=\"https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/build-and-deploy-setting.png\" alt=\"Open Build and Deploy settings\"></p>\n<p>Then point to \"Build hooks\", click \"Add build hook\".\n<img src=\"https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/add-build-hook.png\" alt=\"Add Build Hook\"></p>\n<p>We will get the build hooks URL, copy that link.</p>\n<p><img src=\"https://sznm.dev/images/2020-11-07-monitor-and-measure-site-performance-with-speedlify/build-hook-link.png\" alt=\"Alt Text\"></p>\n<p>Now we can configure Github Actions to automatically trigger build to Netlify. Go back to your speedlify local folder, add a file named <code>.github/workflows/main.yml</code> and paste the copied build hooks URL into this file:</p>\n<pre><code class=\"language-yml\"># .github/workflows/main.yml\n\n# edit according to your needs\nname: Trigger Netlify Build daily on Weekday\non:\n  schedule:\n    # if you want to define your own build trigger schedule, just change the cron schedule value below\n    # use https://crontab.guru/ if you are having some difficulties on how to define the cron values\n    - cron: \"0 22 * * MON-FRI\"\n    # every day on weekdays 22:00.\njobs:\n  build:\n    name: Netlify build\n    runs-on: ubuntu-latest\n    steps:\n      - name: Curl request\n        run: curl -X POST -d {} YOUR_BUILD_HOOK_URL\n</code></pre>\n<p>Commit your changes and run <code>git push</code>. If it's configured correctly, it will be shown in \"Actions\" tab at your github repository.</p>\n<p>Now you have a dedicated page to monitor your site performance from time-to-time and automatically updated.</p>\n<h2>Limitations</h2>\n<p>It's important to note that the more URL you add to your speedlify configurations, the build time needed will be increased. The free version of Netlify have a maximum 15 minutes build time for every build process and 300 minutes build time quota for every month.</p>\n<p>I work around it by limiting my measurement to be done maximum once every 23 hours and limiting the total URLs from all category to be around 5 until 10, and automatically trigger the build every day on weekdays only at 10PM. With those configurations, every build would spend around 4 until 7 minutes (&#x3C;15 minutes), so I won't hit the monthly build time quota limit (4.5 x 5 x 7 ~= 160 minutes -> &#x3C;300 minutes).</p>\n<h2>Thank You!</h2>\n<p>For reading this article. I hope you found this useful.</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://www.speedlify.dev/\">https://www.speedlify.dev/</a></li>\n<li><a href=\"https://github.com/zachleat/speedlify/#deploy-to-netlify\">https://github.com/zachleat/speedlify/#deploy-to-netlify</a></li>\n<li><a href=\"https://github.com/zachleat/speedlify/#known-limitations\">https://github.com/zachleat/speedlify/#known-limitations</a></li>\n<li><a href=\"https://www.zachleat.com/web/speedlify/\">https://www.zachleat.com/web/speedlify/</a></li>\n</ul>\n<h2>Some Alternatives</h2>\n<p>(some exhaustive list of other tools to measure your website performance)</p>\n<ul>\n<li><a href=\"https://web.dev/measure/\">https://web.dev/measure/</a></li>\n<li><a href=\"https://web.dev/measure/\">https://www.lightest.app/</a></li>\n</ul>"
        },
        "_id": "posts/monitor-and-measure-site-performance-with-speedlify.md",
        "_raw": {
          "sourceFilePath": "posts/monitor-and-measure-site-performance-with-speedlify.md",
          "sourceFileName": "monitor-and-measure-site-performance-with-speedlify.md",
          "sourceFileDir": "posts",
          "contentType": "markdown",
          "flattenedPath": "posts/monitor-and-measure-site-performance-with-speedlify"
        },
        "type": "Blog",
        "id": "monitor-and-measure-site-performance-with-speedlify"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Blog"
    },
    "posts/quarantine-self-challenge.md": {
      "document": {
        "title": "May 2020 Quarantine Self Challenge",
        "date": "2020-05-02",
        "cover": "https://images.unsplash.com/photo-1497074367201-25b8d28279e2?auto=format&q=80",
        "thumbnail": "🏆",
        "legacyID": "2020-05-02-self-challenge",
        "published": true,
        "tags": [
          "Gatsby",
          "Vercel",
          "Evergreen",
          "TailwindCSS"
        ],
        "readTime": {
          "text": "2 min read",
          "minutes": 1.21,
          "time": 72600,
          "words": 242
        },
        "body": {
          "raw": "\nRecently I challenged myself to make a web app as soon as possible in two days. Managed to make two. One is a simple Food Recipe App and the other is COVID-19 Data App.\nTurned out it was so fun.\n\n## 1. Le Cook\n\nFun food recipe catalog app powered by [RecipePuppy](https://recipepuppy.com) API....\n\n[https://le-cook.now.sh/](https://le-cook.now.sh/)\n\n![Le Cook (1)](https://sznm.dev/images/2020-05-02-self-challenge/le-cook_1.jpg)\n![Le Cook (2)](https://sznm.dev/images/2020-05-02-self-challenge/le-cook_2.jpg)\n![Le Cook (3)](https://sznm.dev/images/2020-05-02-self-challenge/le-cook_3.jpg)\n\n## 2. COVID-19 Data\n\npresenting COVID-19 statistics powered by [@mathdroid](https://github.com/mathdroid/covid-19-api/)'s covid-19-api.\nI made a vanilla JS version of this app several days ago and I decided to re-develop it using Gatsby (React).\n\n[https://covid19data.now.sh/](https://covid19data.now.sh/)\n\n![COVID-19 Data App (1)](https://sznm.dev/images/2020-05-02-self-challenge/covid19data_1.jpg)\n![COVID-19 Data App (2)](https://sznm.dev/images/2020-05-02-self-challenge/covid19data_2.jpg)\n![COVID-19 Data App (3)](https://sznm.dev/images/2020-05-02-self-challenge/covid19data_3.jpg)\n\nBoth [Le Cook](https://le-cook.now.sh/) and [COVID-19 Data](https://covid19data.now.sh/) app were developed using Segment's Evergreen UI. Just discovered this React UI Framework and turns out it's so convenient to implement it on these projects.\n\nWhen developing COVID-19 Data app, I realized Evergreen UI have no opinionated way to construct responsive layouts. So, I decided to combine it with TailwindCSS which I already tried to use at this personal site. It worked.\n\n![Evergreen UI (1)](https://sznm.dev/images/2020-05-02-self-challenge/evergreen-ui_1.jpg)\n![Evergreen UI (2)](https://sznm.dev/images/2020-05-02-self-challenge/evergreen-ui_2.jpg)\n![Evergreen UI (3)](https://sznm.dev/images/2020-05-02-self-challenge/evergreen-ui_3.jpg)\n![Evergreen UI (4)](https://sznm.dev/images/2020-05-02-self-challenge/evergreen-ui_4.jpg)\n\nI decided to deploy it using [Vercel](https://vercel.com) and I'm so shocked by how fast it is compared to [Netlify](https://netlify.com). I'm considering to migrate to Vercel from Netlify for my previous projects, including this site.\n\nI posted my recent projects [here](https://sznm.dev/projects).\nYou can access the project and the project's GitHub repository link from this [page](https://sznm.dev/projects).\n",
          "html": "<p>Recently I challenged myself to make a web app as soon as possible in two days. Managed to make two. One is a simple Food Recipe App and the other is COVID-19 Data App.\nTurned out it was so fun.</p>\n<h2>1. Le Cook</h2>\n<p>Fun food recipe catalog app powered by <a href=\"https://recipepuppy.com\">RecipePuppy</a> API....</p>\n<p><a href=\"https://le-cook.now.sh/\">https://le-cook.now.sh/</a></p>\n<p><img src=\"https://sznm.dev/images/2020-05-02-self-challenge/le-cook_1.jpg\" alt=\"Le Cook (1)\">\n<img src=\"https://sznm.dev/images/2020-05-02-self-challenge/le-cook_2.jpg\" alt=\"Le Cook (2)\">\n<img src=\"https://sznm.dev/images/2020-05-02-self-challenge/le-cook_3.jpg\" alt=\"Le Cook (3)\"></p>\n<h2>2. COVID-19 Data</h2>\n<p>presenting COVID-19 statistics powered by <a href=\"https://github.com/mathdroid/covid-19-api/\">@mathdroid</a>'s covid-19-api.\nI made a vanilla JS version of this app several days ago and I decided to re-develop it using Gatsby (React).</p>\n<p><a href=\"https://covid19data.now.sh/\">https://covid19data.now.sh/</a></p>\n<p><img src=\"https://sznm.dev/images/2020-05-02-self-challenge/covid19data_1.jpg\" alt=\"COVID-19 Data App (1)\">\n<img src=\"https://sznm.dev/images/2020-05-02-self-challenge/covid19data_2.jpg\" alt=\"COVID-19 Data App (2)\">\n<img src=\"https://sznm.dev/images/2020-05-02-self-challenge/covid19data_3.jpg\" alt=\"COVID-19 Data App (3)\"></p>\n<p>Both <a href=\"https://le-cook.now.sh/\">Le Cook</a> and <a href=\"https://covid19data.now.sh/\">COVID-19 Data</a> app were developed using Segment's Evergreen UI. Just discovered this React UI Framework and turns out it's so convenient to implement it on these projects.</p>\n<p>When developing COVID-19 Data app, I realized Evergreen UI have no opinionated way to construct responsive layouts. So, I decided to combine it with TailwindCSS which I already tried to use at this personal site. It worked.</p>\n<p><img src=\"https://sznm.dev/images/2020-05-02-self-challenge/evergreen-ui_1.jpg\" alt=\"Evergreen UI (1)\">\n<img src=\"https://sznm.dev/images/2020-05-02-self-challenge/evergreen-ui_2.jpg\" alt=\"Evergreen UI (2)\">\n<img src=\"https://sznm.dev/images/2020-05-02-self-challenge/evergreen-ui_3.jpg\" alt=\"Evergreen UI (3)\">\n<img src=\"https://sznm.dev/images/2020-05-02-self-challenge/evergreen-ui_4.jpg\" alt=\"Evergreen UI (4)\"></p>\n<p>I decided to deploy it using <a href=\"https://vercel.com\">Vercel</a> and I'm so shocked by how fast it is compared to <a href=\"https://netlify.com\">Netlify</a>. I'm considering to migrate to Vercel from Netlify for my previous projects, including this site.</p>\n<p>I posted my recent projects <a href=\"https://sznm.dev/projects\">here</a>.\nYou can access the project and the project's GitHub repository link from this <a href=\"https://sznm.dev/projects\">page</a>.</p>"
        },
        "_id": "posts/quarantine-self-challenge.md",
        "_raw": {
          "sourceFilePath": "posts/quarantine-self-challenge.md",
          "sourceFileName": "quarantine-self-challenge.md",
          "sourceFileDir": "posts",
          "contentType": "markdown",
          "flattenedPath": "posts/quarantine-self-challenge"
        },
        "type": "Blog",
        "id": "quarantine-self-challenge"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Blog"
    },
    "posts/stackbit-the-game-changer.md": {
      "document": {
        "title": "Stackbit, the Game Changer",
        "date": "2020-03-22",
        "cover": "https://images.unsplash.com/photo-1580541832626-2a7131ee809f?auto=format&q=80",
        "thumbnail": "🌐",
        "description": "You can launch a powerful and beautiful static site in just under 10 minutes and at super low-cost.",
        "legacyID": "2020-03-22-stackbit-the-game-changer",
        "published": true,
        "tags": [
          "Stackbit",
          "Netlify",
          "Github",
          "Sanity"
        ],
        "readTime": {
          "text": "2 min read",
          "minutes": 1.89,
          "time": 113400,
          "words": 378
        },
        "cover_image": "https://dev-to-uploads.s3.amazonaws.com/i/h0by35x00oeg8t9v7k90.png",
        "body": {
          "raw": "\n_by the time I wrote this post, Stackbit is still at Beta._\n\nHave you ever thought of launching a landing page or a blog with the technology of your choice in just under 10 minutes? Since <a href=\"https://jamstack.wtf/#meaning\" target=\"_blank\" rel=\"noopener\">JAMStack</a> is getting more popular these days, more sites are being developed this way. Building it from scratch is also not too hard. But the problem is sometimes the initialization of the project or the deployment process can spend more time than you think. Not to mention if you are someone who just want to get a little grasp of what all this about without getting your hands dirty and spending some hours just to know what are you actually trying to do. Or if you are a first-timer who needs a step-by-step guide.\n\nYes, this is for you if you want to get a taste of what is JAMStack site about, how does it work in general, but you don't want to build it from scratch just to know it. This is for you if you are someone who are very familiar with building JAMStack sites, having multiple and upcoming clients who requests high performance yet low-cost site. Well, this is where <a href=\"https://www.stackbit.com/\" target=\"_blank\" rel=\"noopener\">Stackbit</a> plays the role for you.\n\nYou can call Stackbit as your smart-assistant who helps you to start your JAMStack site. It's very easy to use, you just need to prepare your <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a> account (<a href=\"https://gitlab.com/\" target=\"_blank\" rel=\"noopener\">GitLab</a> and <a href=\"https://bitbucket.com/\" target=\"_blank\" rel=\"noopener\">BitBucket</a> support coming soon) and a <a href=\"https://netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> account. The next thing is just register yourself into Stackbit (you can even register using your GitHub account so it's more convenient) and you can start to Build a Project. You gonna choose the site theme, the site generator framework, CMS, then you can deploy it.\n\n![Stackbit Beta](https://sznm.dev/images/stackbit-beta.png)\n\nAll of it are done just by picking, doing some clicks, and voila. Yeah, all of the process involve no code. But if you want to develop and customize the project further, that's where your hands start getting dirty.\n\nSo, what are you waiting for? Don't just read this post, it won't bring you anywhere. _<a href=\"https://www.stackbit.com/\" target=\"_blank\" rel=\"noopener\">Try it now</a>_ and you will know what I'm talking about 😂.\n",
          "html": "<p><em>by the time I wrote this post, Stackbit is still at Beta.</em></p>\n<p>Have you ever thought of launching a landing page or a blog with the technology of your choice in just under 10 minutes? Since JAMStack is getting more popular these days, more sites are being developed this way. Building it from scratch is also not too hard. But the problem is sometimes the initialization of the project or the deployment process can spend more time than you think. Not to mention if you are someone who just want to get a little grasp of what all this about without getting your hands dirty and spending some hours just to know what are you actually trying to do. Or if you are a first-timer who needs a step-by-step guide.</p>\n<p>Yes, this is for you if you want to get a taste of what is JAMStack site about, how does it work in general, but you don't want to build it from scratch just to know it. This is for you if you are someone who are very familiar with building JAMStack sites, having multiple and upcoming clients who requests high performance yet low-cost site. Well, this is where Stackbit plays the role for you.</p>\n<p>You can call Stackbit as your smart-assistant who helps you to start your JAMStack site. It's very easy to use, you just need to prepare your GitHub account (GitLab and BitBucket support coming soon) and a Netlify account. The next thing is just register yourself into Stackbit (you can even register using your GitHub account so it's more convenient) and you can start to Build a Project. You gonna choose the site theme, the site generator framework, CMS, then you can deploy it.</p>\n<p><img src=\"https://sznm.dev/images/stackbit-beta.png\" alt=\"Stackbit Beta\"></p>\n<p>All of it are done just by picking, doing some clicks, and voila. Yeah, all of the process involve no code. But if you want to develop and customize the project further, that's where your hands start getting dirty.</p>\n<p>So, what are you waiting for? Don't just read this post, it won't bring you anywhere. <em>Try it now</em> and you will know what I'm talking about 😂.</p>"
        },
        "_id": "posts/stackbit-the-game-changer.md",
        "_raw": {
          "sourceFilePath": "posts/stackbit-the-game-changer.md",
          "sourceFileName": "stackbit-the-game-changer.md",
          "sourceFileDir": "posts",
          "contentType": "markdown",
          "flattenedPath": "posts/stackbit-the-game-changer"
        },
        "type": "Blog",
        "id": "stackbit-the-game-changer"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Blog"
    },
    "projects/add-to-calendar-generator-nextjs.md": {
      "document": {
        "title": "Add to Calendar Generator",
        "description": "Add to Calendar link / button generator.",
        "sznmApps": true,
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2020-10-24",
        "projectLink": "https://addtocal.sznm.dev",
        "repoLink": "https://github.com/sozonome/add-to-calendar-generator",
        "icon": "/app_icons/add-to-calendar.svg",
        "thumbnail": "/app_preview/add-to-calendar.png",
        "thumbnailDark": "/app_preview/add-to-calendar-dark.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/add-to-calendar-generator-nextjs.md",
        "_raw": {
          "sourceFilePath": "projects/add-to-calendar-generator-nextjs.md",
          "sourceFileName": "add-to-calendar-generator-nextjs.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/add-to-calendar-generator-nextjs"
        },
        "type": "Project",
        "id": "add-to-calendar-generator-nextjs"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/advicegenerator-svelte.md": {
      "document": {
        "title": "Advice Generator",
        "description": "Advice generator built using Svelte, powered by Advice Slip JSON API.",
        "stacks": [
          "svelte"
        ],
        "date": "2020-06-05",
        "projectLink": "https://advicegen.sznm.dev",
        "repoLink": "https://github.com/sozonome/advice-generator-svelte",
        "icon": "/app_icons/icon_advicegen.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/advicegenerator-svelte.md",
        "_raw": {
          "sourceFilePath": "projects/advicegenerator-svelte.md",
          "sourceFileName": "advicegenerator-svelte.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/advicegenerator-svelte"
        },
        "type": "Project",
        "id": "advicegenerator-svelte"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/base.md": {
      "document": {
        "title": "Base",
        "description": "My personal knowledge base.",
        "stacks": [
          "nextjs"
        ],
        "date": "2021-01-21",
        "projectLink": "https://base.sznm.dev",
        "icon": "/app_icons/book.svg",
        "projectType": "docs",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/base.md",
        "_raw": {
          "sourceFilePath": "projects/base.md",
          "sourceFileName": "base.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/base"
        },
        "type": "Project",
        "id": "base"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/big-talk.md": {
      "document": {
        "title": "Big Talk",
        "description": "Big Talk questions / deck.",
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2021-09-19",
        "projectLink": "https://bigtalk.sznm.dev",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/big-talk.md",
        "_raw": {
          "sourceFilePath": "projects/big-talk.md",
          "sourceFileName": "big-talk.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/big-talk"
        },
        "type": "Project",
        "id": "big-talk"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/covid19data.md": {
      "document": {
        "title": "COVID-19 Data",
        "description": "Monitor covid-19 stats.",
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2020-05-02",
        "projectLink": "https://covid19.sznm.dev",
        "repoLink": "https://github.com/sozonome/covid-19-data",
        "icon": "/app_icons/covid-19-data.svg",
        "thumbnail": "/app_preview/covid19.png",
        "thumbnailDark": "/app_preview/covid19-dark.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/covid19data.md",
        "_raw": {
          "sourceFilePath": "projects/covid19data.md",
          "sourceFileName": "covid19data.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/covid19data"
        },
        "type": "Project",
        "id": "covid19data"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/eslint-config-sznm.md": {
      "document": {
        "title": "eslint-config-sznm",
        "description": "My personal ESLint rules configurations",
        "date": "2021-09-06",
        "projectLink": "https://www.npmjs.com/package/eslint-config-sznm",
        "repoLink": "https://github.com/sozonome/eslint-config-sznm",
        "icon": "/app_icons/npm-logo.svg",
        "projectType": "libs",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/eslint-config-sznm.md",
        "_raw": {
          "sourceFilePath": "projects/eslint-config-sznm.md",
          "sourceFileName": "eslint-config-sznm.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/eslint-config-sznm"
        },
        "type": "Project",
        "id": "eslint-config-sznm"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/greet-gaas.md": {
      "document": {
        "title": "Greetings as a Service (GaaS)",
        "description": "Make personalized greetings message for your folks.",
        "featured": true,
        "sznmApps": true,
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2021-01-01",
        "projectLink": "https://gaas.sznm.dev/",
        "icon": "/app_icons/greet-gaas.svg",
        "thumbnail": "/app_preview/gaas.png",
        "thumbnailDark": "/app_preview/gaas-dark.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/greet-gaas.md",
        "_raw": {
          "sourceFilePath": "projects/greet-gaas.md",
          "sourceFileName": "greet-gaas.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/greet-gaas"
        },
        "type": "Project",
        "id": "greet-gaas"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/instadld.md": {
      "document": {
        "title": "InstaDLD",
        "description": "[Archived - no longer functional] Instagram Post media downloader. Support multipost download.",
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2020-11-22",
        "repoLink": "https://github.com/sozonome/instadl",
        "icon": "/app_icons/instadld.svg",
        "thumbnail": "/app_preview/instadld.png",
        "thumbnailDark": "/app_preview/instadld-dark.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/instadld.md",
        "_raw": {
          "sourceFilePath": "projects/instadld.md",
          "sourceFileName": "instadld.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/instadld"
        },
        "type": "Project",
        "id": "instadld"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/kapturalumina.md": {
      "document": {
        "title": "KapturaLumina",
        "description": "My Bachelor / Undergraduate Thesis Project. Basic Photography Learning Mobile App with Gamification. Built using Ionic, React, and Firebase.",
        "stacks": [
          "ionic",
          "react",
          "firebase"
        ],
        "date": "2020-06-02",
        "projectLink": "https://kapturalumina.sznm.dev/",
        "repoLink": "https://github.com/sozonome/kapturalumina",
        "playStoreLink": "https://play.google.com/store/apps/details?id=dev.sznm.kapturalumina",
        "icon": "/app_icons/icon_kapturalumina.png",
        "thumbnail": "/app_preview/kapturalumina.png",
        "thumbnailDark": "/app_preview/kapturalumina-dark.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/kapturalumina.md",
        "_raw": {
          "sourceFilePath": "projects/kapturalumina.md",
          "sourceFileName": "kapturalumina.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/kapturalumina"
        },
        "type": "Project",
        "id": "kapturalumina"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/linktester.md": {
      "document": {
        "title": "Link Tester",
        "description": "Deep Link / App Link tester",
        "stacks": [
          "vite",
          "react",
          "chakra-ui"
        ],
        "date": "2023-01-06",
        "projectLink": "https://linktester.sznm.dev",
        "repoLink": "https://github.com/sozonome/linktester",
        "icon": "/app_icons/link.svg",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/linktester.md",
        "_raw": {
          "sourceFilePath": "projects/linktester.md",
          "sourceFileName": "linktester.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/linktester"
        },
        "type": "Project",
        "id": "linktester"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/mixtarter-chakra.md": {
      "document": {
        "title": "mixtarter-chakra",
        "description": "🔋⚡ starter template to initialize Remix app with Chakra UI & Typescript setup",
        "stacks": [
          "chakra-ui"
        ],
        "date": "2021-12-11",
        "projectLink": "https://mixtarter-chakra.sznm.dev",
        "repoLink": "https://github.com/sozonome/mixtarter-chakra",
        "icon": "/app_icons/nextarter-chakra.svg",
        "projectType": "templates",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/mixtarter-chakra.md",
        "_raw": {
          "sourceFilePath": "projects/mixtarter-chakra.md",
          "sourceFileName": "mixtarter-chakra.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/mixtarter-chakra"
        },
        "type": "Project",
        "id": "mixtarter-chakra"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/muvees.md": {
      "document": {
        "title": "muvees",
        "description": "Just another movie DB app",
        "featured": true,
        "sznmApps": true,
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2020-12-29",
        "projectLink": "https://muvees.sznm.dev",
        "icon": "/app_icons/popcorn.png",
        "projectType": "sites",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/muvees.md",
        "_raw": {
          "sourceFilePath": "projects/muvees.md",
          "sourceFileName": "muvees.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/muvees"
        },
        "type": "Project",
        "id": "muvees"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/nextarter-chakra.md": {
      "document": {
        "title": "nextarter-chakra",
        "description": "🔋⚡ battery packed template to initialize Next.js app with Chakra UI & Typescript setup",
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2020-08-13",
        "projectLink": "https://nextarter-chakra.sznm.dev",
        "repoLink": "https://github.com/sozonome/nextarter-chakra",
        "icon": "/app_icons/nextarter-chakra.svg",
        "projectType": "templates",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/nextarter-chakra.md",
        "_raw": {
          "sourceFilePath": "projects/nextarter-chakra.md",
          "sourceFileName": "nextarter-chakra.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/nextarter-chakra"
        },
        "type": "Project",
        "id": "nextarter-chakra"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/nextarter-tailwind.md": {
      "document": {
        "title": "nextarter-tailwind",
        "description": "🔋⚡ battery packed template to initialize Next.js app with TailwindCSS & Typescript setup",
        "stacks": [
          "nextjs",
          "tailwindcss"
        ],
        "date": "2021-10-01",
        "projectLink": "https://nextarter-tailwind.sznm.dev",
        "repoLink": "https://github.com/sozonome/nextarter-tailwind",
        "icon": "/app_icons/nextarter-chakra.svg",
        "projectType": "templates",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/nextarter-tailwind.md",
        "_raw": {
          "sourceFilePath": "projects/nextarter-tailwind.md",
          "sourceFileName": "nextarter-tailwind.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/nextarter-tailwind"
        },
        "type": "Project",
        "id": "nextarter-tailwind"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/personal-site.md": {
      "document": {
        "title": "Personal Site",
        "description": "My personal page. Built with SvelteKit.",
        "stacks": [
          "svelte"
        ],
        "date": "2021-10-08",
        "projectLink": "https://agustinusnathaniel.com",
        "icon": "/app_icons/coconate.png",
        "projectType": "sites",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/personal-site.md",
        "_raw": {
          "sourceFilePath": "projects/personal-site.md",
          "sourceFileName": "personal-site.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/personal-site"
        },
        "type": "Project",
        "id": "personal-site"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/pub-apis.md": {
      "document": {
        "title": "Public APIs",
        "description": "Find public APIs for your next projects.",
        "featured": true,
        "sznmApps": true,
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2020-12-25",
        "projectLink": "https://publicapis.sznm.dev",
        "repoLink": "https://github.com/sozonome/pub-apis",
        "icon": "/app_icons/pub-apis.svg",
        "thumbnail": "/app_preview/public-apis.png",
        "thumbnailDark": "/app_preview/public-apis-dark.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/pub-apis.md",
        "_raw": {
          "sourceFilePath": "projects/pub-apis.md",
          "sourceFileName": "pub-apis.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/pub-apis"
        },
        "type": "Project",
        "id": "pub-apis"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/spoker.md": {
      "document": {
        "title": "spoker",
        "description": "My take on scrum poker.",
        "highlight": true,
        "featured": true,
        "sznmApps": true,
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2021-02-28",
        "projectLink": "https://spoker.dev/intro",
        "icon": "/app_icons/chip.svg",
        "thumbnail": "/app_preview/spoker.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/spoker.md",
        "_raw": {
          "sourceFilePath": "projects/spoker.md",
          "sourceFileName": "spoker.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/spoker"
        },
        "type": "Project",
        "id": "spoker"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/sznm-dev.md": {
      "document": {
        "title": "sznm.dev",
        "description": "The site you're currently watching. Built with NextJS. Composed with Chakra UI and Framer Motion.",
        "stacks": [
          "nextjs",
          "chakra-ui",
          "framer",
          "vercel"
        ],
        "date": "2020-05-25",
        "icon": "/avataaars.svg",
        "projectType": "sites",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/sznm-dev.md",
        "_raw": {
          "sourceFilePath": "projects/sznm-dev.md",
          "sourceFileName": "sznm-dev.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/sznm-dev"
        },
        "type": "Project",
        "id": "sznm-dev"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/tungpajak.md": {
      "document": {
        "title": "tungpajak",
        "description": "My personal tax calculator / simulator.",
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2022-03-12",
        "projectLink": "https://tungpajak.sznm.dev",
        "icon": "/app_icons/book.svg",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/tungpajak.md",
        "_raw": {
          "sourceFilePath": "projects/tungpajak.md",
          "sourceFileName": "tungpajak.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/tungpajak"
        },
        "type": "Project",
        "id": "tungpajak"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/vite-react-chakra-starter.md": {
      "document": {
        "title": "vite-react-chakra-starter",
        "description": "template to initialize vite react-ts app with Chakra UI setup",
        "stacks": [
          "vite",
          "react",
          "chakra-ui"
        ],
        "date": "2021-03-28",
        "projectLink": "https://vite-react-chakra-starter.sznm.dev",
        "repoLink": "https://github.com/sozonome/vite-react-chakra-starter",
        "icon": "/app_icons/nextarter-chakra.svg",
        "projectType": "templates",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/vite-react-chakra-starter.md",
        "_raw": {
          "sourceFilePath": "projects/vite-react-chakra-starter.md",
          "sourceFileName": "vite-react-chakra-starter.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/vite-react-chakra-starter"
        },
        "type": "Project",
        "id": "vite-react-chakra-starter"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/whatsapp-link-helper.md": {
      "document": {
        "title": "WhatsApp Link Helper",
        "description": "WhatsApp link helper / generator",
        "stacks": [
          "nextjs",
          "tailwindcss"
        ],
        "date": "2023-05-30",
        "projectLink": "https://wa.sznm.dev",
        "repoLink": "https://github.com/sozonome/wa-link-helper",
        "icon": "/app_icons/link.svg",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/whatsapp-link-helper.md",
        "_raw": {
          "sourceFilePath": "projects/whatsapp-link-helper.md",
          "sourceFileName": "whatsapp-link-helper.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/whatsapp-link-helper"
        },
        "type": "Project",
        "id": "whatsapp-link-helper"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/wussh.md": {
      "document": {
        "title": "wussh",
        "description": "(formerly olamonde) Create personalized link page.",
        "sznmApps": true,
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2021-05-07",
        "projectLink": "https://wus.sh",
        "icon": "/app_icons/link.svg",
        "thumbnail": "/app_preview/wussh.png",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/wussh.md",
        "_raw": {
          "sourceFilePath": "projects/wussh.md",
          "sourceFileName": "wussh.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/wussh"
        },
        "type": "Project",
        "id": "wussh"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/xtarter.md": {
      "document": {
        "title": "xtarter",
        "description": "Home of my starter templates",
        "featured": true,
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2022-05-19",
        "projectLink": "https://xtarter.sznm.dev",
        "icon": "/app_icons/nextarter-chakra.svg",
        "projectType": "sites",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/xtarter.md",
        "_raw": {
          "sourceFilePath": "projects/xtarter.md",
          "sourceFileName": "xtarter.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/xtarter"
        },
        "type": "Project",
        "id": "xtarter"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "projects/ytget.md": {
      "document": {
        "title": "YTGet",
        "description": "YouTube audio and video downloader.",
        "published": false,
        "featured": true,
        "stacks": [
          "nextjs",
          "chakra-ui"
        ],
        "date": "2020-12-07",
        "projectLink": "https://ytget.sznm.dev/",
        "icon": "/app_icons/ytget.svg",
        "projectType": "apps",
        "body": {
          "raw": "",
          "html": ""
        },
        "_id": "projects/ytget.md",
        "_raw": {
          "sourceFilePath": "projects/ytget.md",
          "sourceFileName": "ytget.md",
          "sourceFileDir": "projects",
          "contentType": "markdown",
          "flattenedPath": "projects/ytget"
        },
        "type": "Project",
        "id": "ytget"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Project"
    },
    "snippets/custom-scroll-bar.md": {
      "document": {
        "title": "Custom Scrollbar",
        "description": "define your own custom scroll bar",
        "published": true,
        "date": "2022-07-22",
        "stacks": [
          "css",
          "chakra-ui"
        ],
        "body": {
          "raw": "\n## CSS\n\n```css\n::-webkit-scrollbar {\n  width: 0.75rem;\n  height: 0.75rem;\n  background-color: blue;\n}\n\n::-webkit-scrollbar-thumb {\n  border-radius: 20px;\n  background-color: gray;\n}\n\n/** firefox **/\nhtml {\n  scrollbar-width: thin;\n  scrollbar-color: blue;\n}\n```\n\n## References\n\n- MDN\n  - [https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar#browser_compatibility](https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar#browser_compatibility)\n  - [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars#browser_compatibility](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars#browser_compatibility)\n- W3Schools: [https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp](https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp)\n- [sznm.dev](http://sznm.dev) - chakra-ui implementation\n  - [https://github.com/sozonome/sznm.dev/commit/f967221e40c7d680eb25ca4944ede4f5def2b628](https://github.com/sozonome/sznm.dev/commit/f967221e40c7d680eb25ca4944ede4f5def2b628)\n  - [https://github.com/sozonome/sznm.dev/commit/76c3ce6895b6de5b0a0d4195378cf68cde269054](https://github.com/sozonome/sznm.dev/commit/76c3ce6895b6de5b0a0d4195378cf68cde269054)\n",
          "html": "<h2>CSS</h2>\n<pre><code class=\"language-css\">::-webkit-scrollbar {\n  width: 0.75rem;\n  height: 0.75rem;\n  background-color: blue;\n}\n\n::-webkit-scrollbar-thumb {\n  border-radius: 20px;\n  background-color: gray;\n}\n\n/** firefox **/\nhtml {\n  scrollbar-width: thin;\n  scrollbar-color: blue;\n}\n</code></pre>\n<h2>References</h2>\n<ul>\n<li>MDN\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar#browser_compatibility\">https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar#browser_compatibility</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars#browser_compatibility\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars#browser_compatibility</a></li>\n</ul>\n</li>\n<li>W3Schools: <a href=\"https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp\">https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp</a></li>\n<li><a href=\"http://sznm.dev\">sznm.dev</a> - chakra-ui implementation\n<ul>\n<li><a href=\"https://github.com/sozonome/sznm.dev/commit/f967221e40c7d680eb25ca4944ede4f5def2b628\">https://github.com/sozonome/sznm.dev/commit/f967221e40c7d680eb25ca4944ede4f5def2b628</a></li>\n<li><a href=\"https://github.com/sozonome/sznm.dev/commit/76c3ce6895b6de5b0a0d4195378cf68cde269054\">https://github.com/sozonome/sznm.dev/commit/76c3ce6895b6de5b0a0d4195378cf68cde269054</a></li>\n</ul>\n</li>\n</ul>"
        },
        "_id": "snippets/custom-scroll-bar.md",
        "_raw": {
          "sourceFilePath": "snippets/custom-scroll-bar.md",
          "sourceFileName": "custom-scroll-bar.md",
          "sourceFileDir": "snippets",
          "contentType": "markdown",
          "flattenedPath": "snippets/custom-scroll-bar"
        },
        "type": "Snippet",
        "id": "custom-scroll-bar"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Snippet"
    },
    "snippets/data-fetching.md": {
      "document": {
        "title": "Data Fetching",
        "description": "Fetch data with ease",
        "published": true,
        "date": "2022-10-24",
        "stacks": [
          "http-client",
          "data-fetching"
        ],
        "body": {
          "raw": "\n## Fetcher Utility\n\n> install [axios](https://axios-http.com/)\n\n```bash\npnpm add axios\n```\n\n> add fetcher utility for GET\n\n```ts\nimport axios from \"axios\";\n\ntype FetcherArgs = {\n  url: string;\n  params?: any;\n};\n\nexport const fetcher = <ResType>({ url, params }: FetcherArgs) =>\n  axios.get<ResType>(url, { params }).then((res) => res.data);\n```\n\n## Data Hook with SWR\n\n> install [SWR](https://swr.vercel.app)\n\n```bash\npnpm add swr\n```\n\n> add swr hook utility\n\n```ts\nimport useSWR from \"swr\";\n\ntype UseAppSWRArgs<ResType> = {\n  url: string;\n  params?: any;\n  fallbackData?: ResType;\n  isReady?: boolean;\n};\n\nexport const useAppSWR = <ResType, ErrorType = any>({\n  url,\n  params,\n  fallbackData,\n  isReady = true,\n}: UseAppSWRArgs<ResType>) => {\n  const { data, error, mutate } = useSWR<ResType, ErrorType>(\n    isReady ? { url, params } : null,\n    fetcher,\n    {\n      fallbackData,\n    }\n  );\n\n  return {\n    data,\n    isLoading: !error && !data && isReady,\n    isError: error,\n    mutate,\n  };\n};\n```\n\n> add data hook\n\n```ts\n// useMovieData.ts\nexport const useMovieData = (params?: any) =>\n  useAppSWR({\n    url: \"https://some-api-url.com/api/movies\",\n    params,\n  });\n```\n\n> call the data hook in the component\n\n```tsx\n// SomeComponent.tsx\n\nconst SomeComponent = () => {\n  const { data, isLoading } = useMovieData();\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      {data.results.map((item) => (\n        <p>{item.title}</p>\n      ))}\n    </div>\n  );\n};\n```\n",
          "html": "<h2>Fetcher Utility</h2>\n<blockquote>\n<p>install <a href=\"https://axios-http.com/\">axios</a></p>\n</blockquote>\n<pre><code class=\"language-bash\">pnpm add axios\n</code></pre>\n<blockquote>\n<p>add fetcher utility for GET</p>\n</blockquote>\n<pre><code class=\"language-ts\">import axios from \"axios\";\n\ntype FetcherArgs = {\n  url: string;\n  params?: any;\n};\n\nexport const fetcher = &#x3C;ResType>({ url, params }: FetcherArgs) =>\n  axios.get&#x3C;ResType>(url, { params }).then((res) => res.data);\n</code></pre>\n<h2>Data Hook with SWR</h2>\n<blockquote>\n<p>install <a href=\"https://swr.vercel.app\">SWR</a></p>\n</blockquote>\n<pre><code class=\"language-bash\">pnpm add swr\n</code></pre>\n<blockquote>\n<p>add swr hook utility</p>\n</blockquote>\n<pre><code class=\"language-ts\">import useSWR from \"swr\";\n\ntype UseAppSWRArgs&#x3C;ResType> = {\n  url: string;\n  params?: any;\n  fallbackData?: ResType;\n  isReady?: boolean;\n};\n\nexport const useAppSWR = &#x3C;ResType, ErrorType = any>({\n  url,\n  params,\n  fallbackData,\n  isReady = true,\n}: UseAppSWRArgs&#x3C;ResType>) => {\n  const { data, error, mutate } = useSWR&#x3C;ResType, ErrorType>(\n    isReady ? { url, params } : null,\n    fetcher,\n    {\n      fallbackData,\n    }\n  );\n\n  return {\n    data,\n    isLoading: !error &#x26;&#x26; !data &#x26;&#x26; isReady,\n    isError: error,\n    mutate,\n  };\n};\n</code></pre>\n<blockquote>\n<p>add data hook</p>\n</blockquote>\n<pre><code class=\"language-ts\">// useMovieData.ts\nexport const useMovieData = (params?: any) =>\n  useAppSWR({\n    url: \"https://some-api-url.com/api/movies\",\n    params,\n  });\n</code></pre>\n<blockquote>\n<p>call the data hook in the component</p>\n</blockquote>\n<pre><code class=\"language-tsx\">// SomeComponent.tsx\n\nconst SomeComponent = () => {\n  const { data, isLoading } = useMovieData();\n\n  if (isLoading) {\n    return &#x3C;p>Loading...&#x3C;/p>;\n  }\n\n  return (\n    &#x3C;div>\n      {data.results.map((item) => (\n        &#x3C;p>{item.title}&#x3C;/p>\n      ))}\n    &#x3C;/div>\n  );\n};\n</code></pre>"
        },
        "_id": "snippets/data-fetching.md",
        "_raw": {
          "sourceFilePath": "snippets/data-fetching.md",
          "sourceFileName": "data-fetching.md",
          "sourceFileDir": "snippets",
          "contentType": "markdown",
          "flattenedPath": "snippets/data-fetching"
        },
        "type": "Snippet",
        "id": "data-fetching"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Snippet"
    },
    "snippets/overflow-scroll-without-scrollbar.md": {
      "document": {
        "title": "Overflow Scroll without Scrollbar",
        "description": "for sleek overflow scroll in mobile viewport",
        "published": true,
        "date": "2022-07-22",
        "stacks": [
          "css",
          "chakra-ui"
        ],
        "body": {
          "raw": "\n## CSS\n\n```css\n.some-component {\n  overflow-x: scroll; /* or overflow-y */\n}\n\n.some-component::-webkit-scrollbar {\n  display: none;\n}\n```\n\n## Chakra-UI\n\n```jsx\n<Flex overflow=\"scroll\" css={{ \"&::-webkit-scrollbar\": { display: \"none\" } }}>\n  ...some children\n</Flex>\n```\n\n## References\n\n- [https://stackoverflow.com/questions/65042380/how-to-add-webkit-scrollbar-pseudo-element-in-chakra-ui-element-react](https://stackoverflow.com/questions/65042380/how-to-add-webkit-scrollbar-pseudo-element-in-chakra-ui-element-react)\n",
          "html": "<h2>CSS</h2>\n<pre><code class=\"language-css\">.some-component {\n  overflow-x: scroll; /* or overflow-y */\n}\n\n.some-component::-webkit-scrollbar {\n  display: none;\n}\n</code></pre>\n<h2>Chakra-UI</h2>\n<pre><code class=\"language-jsx\">&#x3C;Flex overflow=\"scroll\" css={{ \"&#x26;::-webkit-scrollbar\": { display: \"none\" } }}>\n  ...some children\n&#x3C;/Flex>\n</code></pre>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/65042380/how-to-add-webkit-scrollbar-pseudo-element-in-chakra-ui-element-react\">https://stackoverflow.com/questions/65042380/how-to-add-webkit-scrollbar-pseudo-element-in-chakra-ui-element-react</a></li>\n</ul>"
        },
        "_id": "snippets/overflow-scroll-without-scrollbar.md",
        "_raw": {
          "sourceFilePath": "snippets/overflow-scroll-without-scrollbar.md",
          "sourceFileName": "overflow-scroll-without-scrollbar.md",
          "sourceFileDir": "snippets",
          "contentType": "markdown",
          "flattenedPath": "snippets/overflow-scroll-without-scrollbar"
        },
        "type": "Snippet",
        "id": "overflow-scroll-without-scrollbar"
      },
      "documentHash": "1688499044000",
      "hasWarnings": false,
      "documentTypeName": "Snippet"
    }
  }
}
